# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '786009f0-472d-4060-ae69-6e95b153c5b0'

  # Web app name
  webAppName: 'tuktuk'

  # Environment name
  environmentName: 'tuktuk'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)


    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'


    - script: |
        npm install
        npm run test --if-present
      displayName: 'npm install, build and test'


    - task: PublishTestResults@2
      condition: always()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-results/jest/*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)'




    - task: PublishCodeCoverageResults@1
      condition: always()
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/coverage/cobertura-coverage.xml'
    
    - task: CmdLine@2
      condition: always()
      inputs:
        script: |
          ls -R $(System.DefaultWorkingDirectory)
          echo "Clean folder"
          rm -rfv package-lock.json
          rm -rfv .git
          rm -rfv test-results
          rm -rfv coverage
          ls -l 


    - task: ArchiveFiles@2
      displayName: 'Archive files'
      condition: always()
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true


    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      condition: always()
      artifact: drop


    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: $(azureSubscription)
        appType: 'webAppLinux'
        WebAppName: $(webAppName)
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
        RuntimeStack: 'NODE|20-lts'
        StartupCommand: 'npm run dev'
